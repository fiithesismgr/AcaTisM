<?php
// src/Acatism/AuthenticationBundle/Repository/UserRepository.php
namespace Acatism\AuthenticationBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends DocumentRepository implements UserProviderInterface
{

	public function loadUserByUsername($username)
	{
		$qb = $this->createQueryBuilder();
		$qb->addOr($qb->expr()->field('username')->equals($username));
		$qb->addOr($qb->expr()->field('email')->equals($username));

		$user = $qb->getQuery()->getSingleResult();
		//$user = $this->findOneBy(array('username' => $username));
		if(is_null($user))
		{
			$message = sprintf('Unable to find an active admin AcatismAuthenticationBundle:User object identified by
                               "%s".', $username);
			throw new UsernameNotFoundException($message, 0);
		}

		return $user;
	}
	public function refreshUser(UserInterface  $user)
	{
		$class = get_class($user);
		if (!$this->supportsClass($class)) {
			throw new UnsupportedUserException(
				sprintf('Instances of "%s" are not supported.', $class));
		}
		return $this->findOneBy(array('id' => $user->getId()));
	}

	public function supportsClass($class)
	{
		return $this->getDocumentName() === $class || is_subclass_of($class, $this->getDocumentName());
	}
}